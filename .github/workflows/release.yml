on:
  push:
    tags:
      - '*' # any tag

name: Release Build

jobs:
  build:
    runs-on: windows-2019
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: checkout powershell-yaml
        uses: actions/checkout@v3
        with:
          repository: cloudbase/powershell-yaml
          path: powershell-yaml

      - id: tagName
        name: Get tag name
        uses: olegtarasov/get-tag@v2.1.2
        #puts the tag name in $env:GIT_TAG_NAME

      - id: projectselection
        name: Set build and test projects by tag
        run: ./publish/Get-ReleaseData.ps1 $env:GIT_TAG_NAME
        #outputs projects, releasetitle
        #also writes release notes to ./publish/release_notes.txt

      - name: Setup Nuget.exe
        uses: NuGet/setup-nuget@v1

      - name: Nuget Restore
        run: nuget restore .\src\PlayniteExtensions.sln

      - name: Build
        run: |
           cd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\"
           .\MSBuild.exe $Env:GITHUB_WORKSPACE\src\PlayniteExtensions.sln -p:Configuration=Release -restore -clp:ErrorsOnly

      - name: Setup Playnite
        run: |
           Invoke-WebRequest -Uri "https://github.com/JosefNemec/Playnite/releases/download/10.20/Playnite1020.zip" -OutFile "$Env:GITHUB_WORKSPACE\Playnite.zip"
           Expand-Archive "$Env:GITHUB_WORKSPACE\Playnite.zip" -DestinationPath "$Env:GITHUB_WORKSPACE\Playnite"

      - name: Pack with Playnite
        run: |
          mkdir "PackingOutput"
          Write-Host "${{ steps.projectselection.outputs.projects }}"
          $projects = ConvertFrom-Json '${{ steps.projectselection.outputs.projects }}'

          foreach ($p in $projects) {
            Write-Host "Packing project $p"
            $ver = $p.Version -replace '\.', '_'
            & "$Env:GITHUB_WORKSPACE\Playnite\Toolbox.exe" pack "$Env:GITHUB_WORKSPACE\src\$($p.Name)\bin\Release\" "$Env:GITHUB_WORKSPACE\PackingOutput"
            Get-ChildItem "$Env:GITHUB_WORKSPACE\PackingOutput" -Filter *.pext | Rename-Item -NewName "$($p.Name)_${ver}.pext"
            Move-Item -Path "$Env:GITHUB_WORKSPACE\PackingOutput\*.pext" -Destination $Env:GITHUB_WORKSPACE
          }

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: false
          name: "${{ steps.projectselection.outputs.releasetitle }}"
          body_path: 'publish/release_notes.txt'
          files: '*.pext'
